#!/bin/zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# something with performance tracing
#zmodload zsh/zprof

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES="$HOME/.dotfiles"

# your project folder that we can `c [tab]` to
export PROJECTS="$HOME/code"

# make sure the system knows how I like to edit
export EDITOR=nvim
export VISUAL=nvim
export GIT_EDITOR=$EDITOR
export PAGER=less

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# load antibody plugins
source ~/.bundles.txt

# gotta load asdf early, so language detection works accurately
[[ -f "${HOME}/.asdf/asdf.sh" ]] && . "${HOME}/.asdf/asdf.sh"

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit
else
  compinit -C
fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

unset config_files updated_at

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
# shellcheck disable=SC1090
[ -f ~/.localrc ] && . ~/.localrc

local source_files=(
  "${HOME}/.fzf.zsh"
  "${HOME}/.asdf/completions/asdf.bash"
  '~/.travis/travis.sh'
  '/opt/google-cloud-sdk/path/path.zsh.inc'
  '/opt/google-cloud-sdk/completion.zsh.inc'
  "${HOME}/.iterm2_shell_integration.zsh"
  "${HOME}/.p10k.zsh"
)
for file in "$source_files[@]"; do
  if [ -f "$file" ]; then
    source "$file"
  fi
done
unset source_files

# export PATH="${PATH}:/usr/local/texlive/2019basic/bin/x86_64-darwin/"
